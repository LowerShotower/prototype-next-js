/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  '/{portal}/homepage': {
    /**
     * get homepage
     * @description gets the homepage
     */
    get: operations['getHomepage']
  }
  '/{portal}/ressort/{id}': {
    /**
     * get a ressort page for the given id
     * @description gets a ressort page
     */
    get: operations['getRessort']
  }
  '/{portal}/article/{id}': {
    /**
     * get an article page for the given id
     * @description gets an article page
     */
    get: operations['getArticle']
  }
  '/{portal}/reducedarticle/{id}': {
    /**
     * get a reduced article page for the given id
     * @description gets a reduced article page
     */
    get: operations['getReducedArticle']
  }
  '/{portal}/topic/{id}': {
    /**
     * get a topic page for the given id/title
     * @description gets a topic page
     */
    get: operations['getTopic']
  }
  '/{portal}/author/{id}': {
    /**
     * get an author page for the given id
     * @description gets an author page
     */
    get: operations['getAuthor']
  }
  '/{portal}/brickgroup/{id}': {
    /**
     * get a brick group fragment for the given id
     * @description gets a brick group fragment
     */
    get: operations['getBrickGroup']
  }
  '/{portal}/brick/{id}': {
    /**
     * get a brick fragment for the given id
     * @description gets a brick fragment
     */
    get: operations['getBrick']
  }
  '/{portal}/header/{id}': {
    /**
     * get the header fragment for the given id
     * @description gets the header fragment
     */
    get: operations['getHeader']
  }
  '/{portal}/footer/{id}': {
    /**
     * get the footer fragment for the given id
     * @description gets the footer fragment
     */
    get: operations['getFooter']
  }
}

export type webhooks = Record<string, never>

export interface components {
  schemas: {
    /**
     * @description Portal identifier
     * @example stz
     */
    Portal: string
    /**
     * @description Unique identifier
     * @example a26d8a68-b297-11ed-afa1-0242ac120002
     */
    Id: string
    /** @description The response body for 4XX and 5XX errors. */
    ApiError: {
      /**
       * @description Internal error message for logging and crash reports. This message should never be shown to the user.
       * @example internal error message
       */
      error: string
      /**
       * @description Technical ID to distinguish error cases; list should be extended with domain specific errors
       * @example 503
       */
      errorId?: string
      /** @description A user-visible error message */
      message: {
        /**
         * @description Plain text error message for the user.
         * @example Some error happened
         */
        text: string
        /**
         * @description URL of an error page. The page may contain additional information, links, etc. that help the user to understand and/or fix the issue.
         * @example https://example.com/errordetails
         */
        url?: string
      }
    }
    /** @description A wall */
    Wall: {
      /**
       * @example articlepage
       * @enum {string}
       */
      type?:
        | 'articlepage'
        | 'homepage'
        | 'ressortpage'
        | 'topicpage'
        | 'authorpage'
      /** @example a26d8a68-b297-11ed-afa1-0242ac120002 */
      id: string
      /** @example Page Title */
      title: string
      /** @example Page Kicker */
      kicker: string
      content: (
        | components['schemas']['Ad']
        | components['schemas']['HtmlHead']
        | components['schemas']['Header']
        | components['schemas']['PageContent']
        | components['schemas']['Footer']
      )[]
    }
    /**
     * @description HTML <head> code
     * @example {
     *   "type": "htmlhead",
     *   "content": {
     *     "type": "html",
     *     "text": "<head> <title>Lokal - Schwarzwälder Bote</title> <link rel=\"canonical\" href=\"https://www.schwarzwaelder-bote.de/\"> <meta name=\"apple-mobile-web-app-capable\" content=\"yes\" /> <meta name=\"robots\" content=\"index, follow, noarchive, noodp, noydir\" /> <meta name=\"robots\" content=\"max-snippet:-1, max-image-preview:large, max-video-preview:-1\"> <link rel=\"shortcut icon\" href=\"https://www.schwarzwaelder-bote.de/staticcontent/schwarzwaelder_bote/common/assets/favicon.ico\" type=\"image/ico\"> <meta http-equiv=\"pragma\" content=\"no-cache\"> <meta http-equiv=\"cache-control\" content=\"no-cache\"> <meta http-equiv=\"Content-Language\" content=\"de\"> <meta http-equiv=\"last-modified\" content=\"Thu Mar 02 07:44:50 CET 2023\">   <meta name=\"author\" content=\"Schwarzwälder Bote, Oberndorf, Germany\"> <meta name=\"copyright\" content=\"Schwarzwälder Bote, Oberndorf, Germany\"> <meta name=\"email\" content=\"service@schwarzwaelder-bote.de\"> <meta name=\"siteinfo\" content=\"https://www.schwarzwaelder-bote.de/robots.txt\"> <meta name=\"description\" content=\"Aktuelle Nachrichten aus dem Schwarzwald und der Region, Schwarzwald-Baar Kreis, Kreis Freudenstadt, Kreis Calw, Zollernalb Kreis, Kreis Rottweil, Kreis Ortenau, Nordschwarzwald, Südschwarzwald, Baden-Württemberg, Politik, Wirtschaft, Finanzen, Beruf, Karriere, Auto, Wohnen und Bauen, Sport, VfB Stuttgart, Fußball, Tabellen, Ergebnisse, Kultur, Reise, Wetter, Südwesten, Veranstaltungen, Musik, Kino, Clubs, Gastro, Video, Fotostrecken, Stellenmarkt, Stellenangebote, Stellengesuche, Immobilien, Wohnung mieten kaufen, Verlag, Presse\"> <meta name=\"keywords\" content=\"Lokal, Startseite\"> <meta name=\"news_keywords\" content=\"Lokal, Startseite\"> <meta name=\"date\" content=\"Thu Mar 02 07:44:50 CET 2023\"> <meta property=\"og:title\" content=\"Lokal\" /> <meta property=\"og:type\" content=\"website\" /> <meta property=\"og:image\" content=\"https://www.schwarzwaelder-bote.de/www/schwarzwaelder_bote/images/logo_social.jpg\">  \n<meta property=\"og:image:secure_url\" content=\"https://www.schwarzwaelder-bote.de/www/schwarzwaelder_bote/images/logo_social.jpg\">  <meta property=\"og:image:width\" content=\"1200\">  <meta property=\"og:image:height\" content=\"675\">  <meta property=\"og:image:type\" content=\"image/jpeg\"> <link id=\"mainCss\" href=\"https://www.schwarzwaelder-bote.de/staticcontent/schwarzwaelder_bote/common/css/main.min.css?v=20230213-1300\" type=\"text/css\" rel=\"stylesheet\"> <link rel=\"shortcut icon\" href=\"https://www.schwarzwaelder-bote.de/www/schwarzwaelder_bote/favicon.ico\" type=\"image/ico\">\n<script async id=\"ebx\" src=\"//applets.ebxcdn.com/ebx.js\" data-applet-id=\"iojxpcmb\"></script> </head>"
     *   }
     * }
     */
    HtmlHead: {
      /**
       * @example htmlhead
       * @enum {string}
       */
      type: 'htmlhead'
      content: components['schemas']['Html']
    }
    /** @description The page header */
    Header: {
      /**
       * @example header
       * @enum {string}
       */
      type: 'header'
      content: (
        | components['schemas']['TopNavigation']
        | components['schemas']['MainNavigation']
        | components['schemas']['MetaNavigation']
        | components['schemas']['UserNavigation']
        | components['schemas']['BottomNavigation']
        | components['schemas']['Ad']
        | components['schemas']['Logo']
      )[]
    }
    /** @description Main Logo */
    Logo: {
      /**
       * @description The url of the logo
       * @example https://www.schwarzwaelder-bote.de/staticcontent/schwarzwaelder_bote/common/assets/svg/schwarzwaelder-bote_logo.svg
       */
      reference: string
    }
    /**
     * @description Top navigation
     * @example {
     *   "type": "topnavigation",
     *   "content": [
     *     {
     *       "type": "toplevelentry",
     *       "name": "Top Navigation 1",
     *       "label": "First",
     *       "reference": "/ressort/1"
     *     },
     *     {
     *       "type": "toplevelentry",
     *       "name": "Top Navigation 2",
     *       "label": "Second",
     *       "reference": "/ressort/2"
     *     },
     *     {
     *       "type": "toplevelentry",
     *       "name": "Top Navigation 3",
     *       "label": "Third",
     *       "reference": "/ressort/3"
     *     }
     *   ]
     * }
     */
    TopNavigation: {
      /**
       * @example topnavigation
       * @enum {string}
       */
      type: 'topnavigation'
      content: components['schemas']['Navigation']
    }
    /**
     * @description Main navigation
     * @example {
     *   "type": "mainnavigation",
     *   "content": [
     *     {
     *       "type": "toplevelentry",
     *       "name": "Main Navigation 1",
     *       "label": "First",
     *       "reference": "/ressort/1"
     *     },
     *     {
     *       "type": "toplevelentry",
     *       "name": "Main Navigation 2",
     *       "label": "Second",
     *       "reference": "/ressort/2"
     *     },
     *     {
     *       "type": "section",
     *       "name": "Main Navigation 3",
     *       "label": "Third",
     *       "reference": "/ressort/3",
     *       "elements": [
     *         {
     *           "type": "sectionentry",
     *           "name": "Main Sub Navigation 1",
     *           "label": "First Sub",
     *           "reference": "/ressort/4"
     *         },
     *         {
     *           "type": "subsection",
     *           "name": "Main Sub Navigation 2",
     *           "label": "Second Sub",
     *           "reference": "/ressort/5",
     *           "elements": [
     *             {
     *               "type": "subsectionentry",
     *               "name": "Main Sub Sub Navigation 1",
     *               "label": "First Sub Sub",
     *               "reference": "/ressort/6"
     *             },
     *             {
     *               "type": "subsectionentry",
     *               "name": "Main Sub Sub Navigation 2",
     *               "label": "Second Sub Sub",
     *               "reference": "/ressort/7"
     *             }
     *           ]
     *         }
     *       ]
     *     }
     *   ]
     * }
     */
    MainNavigation: {
      /**
       * @example mainnavigation
       * @enum {string}
       */
      type: 'mainnavigation'
      content: components['schemas']['Navigation']
    }
    /** @description User navigation */
    UserNavigation: {
      /**
       * @example usernavigation
       * @enum {string}
       */
      type: 'usernavigation'
      content: components['schemas']['Html'][]
    }
    /**
     * @description Meta navigation
     * @example {
     *   "type": "metanavigation",
     *   "content": [
     *     {
     *       "type": "toplevelentry",
     *       "name": "Meta Navigation 1",
     *       "label": "First",
     *       "reference": "/ressort/11"
     *     },
     *     {
     *       "type": "toplevelentry",
     *       "name": "Meta Navigation 2",
     *       "label": "Second",
     *       "reference": "/ressort/22"
     *     },
     *     {
     *       "type": "toplevelentry",
     *       "name": "Meta Navigation 3",
     *       "label": "Third",
     *       "reference": "/ressort/33"
     *     }
     *   ]
     * }
     */
    MetaNavigation: {
      /**
       * @example metanavigation
       * @enum {string}
       */
      type: 'metanavigation'
      content: components['schemas']['Navigation']
    }
    /**
     * @description Bottom navigation
     * @example {
     *   "type": "bottomnavigation",
     *   "content": [
     *     {
     *       "type": "breadcrumb",
     *       "content": [
     *         {
     *           "type": "breadcrumbitem",
     *           "name": "First",
     *           "reference": "/ressort/1"
     *         },
     *         {
     *           "type": "breadcrumbitem",
     *           "name": "Second",
     *           "reference": "/ressort/2"
     *         },
     *         {
     *           "type": "breadcrumbitem",
     *           "name": "Third",
     *           "referernce": "/ressort/3"
     *         }
     *       ]
     *     }
     *   ]
     * }
     */
    BottomNavigation: {
      /**
       * @example bottomnavigation
       * @enum {string}
       */
      type: 'bottomnavigation'
      content:
        | components['schemas']['Breadcrumb']
        | components['schemas']['TopicIndex']
    }
    /** @description A navigation */
    Navigation: (
      | components['schemas']['TopLevelEntry']
      | components['schemas']['Section']
    )[]
    /** @description A top level entry without any sub-entries */
    TopLevelEntry: components['schemas']['NavigationEntryBase'] & {
      /**
       * @example toplevelentry
       * @enum {string}
       */
      type: 'toplevelentry'
    }
    /** @description An entry in a section without any other child entries */
    SectionEntry: {
      [key: string]: unknown | undefined
    } & components['schemas']['NavigationEntryBase'] & {
        /**
         * @example sectionentry
         * @enum {string}
         */
        type: 'sectionentry'
      }
    /** @description Am entry in a sub-section without any other child entries */
    SubSectionEntry: {
      [key: string]: unknown | undefined
    } & components['schemas']['NavigationEntryBase'] & {
        /**
         * @example subsectionentry
         * @enum {string}
         */
        type: 'subsectionentry'
      }
    /** @description A second level section which can have child entries but no further sub-sections */
    SubSection: {
      [key: string]: unknown | undefined
    } & components['schemas']['NavigationEntryBase'] & {
        /**
         * @example subsection
         * @enum {string}
         */
        type: 'subsection'
        elements: components['schemas']['SubSectionEntry'][]
      }
    /** @description A top level section which can have child entries and sub-sections */
    Section: {
      [key: string]: unknown | undefined
    } & components['schemas']['NavigationEntryBase'] & {
        /**
         * @example section
         * @enum {string}
         */
        type: 'section'
        elements: (
          | components['schemas']['SectionEntry']
          | components['schemas']['SubSection']
        )[]
      }
    /** @description A generic navigation entry */
    NavigationEntryBase: {
      /**
       * @description The name of the entry. This is displayed as-is in the app.
       * @example Entry Name
       */
      name: string
      /**
       * @description An additional label for the entry. This is mainly used to designate entries as advertisment.
       * @example Entry Label
       */
      label?: string
      /**
       * @description Info about what the entry is referencing
       * @example /ressort/4c23de64-b29c-11ed-afa1-0242ac120002
       */
      reference?: string
    }
    /** @description The breadcrumb navigation path */
    Breadcrumb: {
      /**
       * @example breadcrumb
       * @enum {string}
       */
      type: 'breadcrumb'
      content: components['schemas']['BreadcrumbItem'][]
    }
    /** @description A item in the breadcrumb path */
    BreadcrumbItem: {
      /**
       * @example breadcrumbitem
       * @enum {string}
       */
      type: 'breadcrumbitem'
      /** @example Sub Page 1 */
      name: string
      /** @example /ressort/4c23de64-b29c-11ed-afa1-0242ac120002 */
      reference: string
    }
    /** @description The topic index navigation path */
    TopicIndex: {
      /**
       * @example topicindex
       * @enum {string}
       */
      type: 'topicindex'
      content: components['schemas']['TopicIndexItem'][]
      [key: string]: unknown | undefined
    }
    /** @description A item in the topic index path */
    TopicIndexItem: {
      /**
       * @example topicindexitem
       * @enum {string}
       */
      type: 'topicindexitem'
      /** @example Topic Index A */
      name: string
      /** @example /topic/A */
      reference: string
    }
    /** @description Width/height object */
    Dimension: {
      /** @example 1200 */
      width: number
      /** @example 900 */
      height: number
    }
    /**
     * @description The page footer
     * @example {
     *   "type": "footer",
     *   "content": [
     *     {
     *       "type": "html",
     *       "text": "<div class='brickgroup m-wrapper'  data-renderer='_dynamic'  data-layout-desktop='w12-'  data-layout-tablet='w12-'  data-layout-mobile='w12-'  data-brickid='c6ad6b82-f1a9-4b70-b9ca-b794938e8dc8'> <a class='scroll-to' href='#top-of-page' id='top-anchor'> <span class='icon-arrow-1'></span>  </a>  <ul class='footer-links'> <li> <a href='/impressum'>Impressum &amp; Kontakt</a> </li> <li> <a href='/datenschutz'>Datenschutzerklärung</a> </li> <li> <a href='#' onclick='window._sp_.gdpr.loadPrivacyManagerModal(217552);return false;'>Datenschutz-Einstellungen</a> </li> <li> <a href='/agb-digital'>AGB</a> </li> <li> <a href='https://produkte.schwarzwaelder-bote.de/kuendigung/' target='_blank'>Abonnement kündigen</a> </li> <li> <a href='/ethikrichtlinie'>Ethikrichtlinie</a> </li> <li> <a href='https://service.schwarzwaelder-bote.de/cms/wm?catId=12066433' target='_blank'>Mediadaten</a> </li> <li class='copyright'> © schwarzwaelder-bote.de </li> </ul> <style type='text/css'> .mod-footer .footer-links li.copyright { padding-top: 10px; } </style> <div class='footer-extra'> <ul> <li> Partner </li> <li> <a href='https://www.stuttgarter-zeitung.de/' target='_blank'>Stuttgarter Zeitung </a> </li> <li> <a href='https://www.stuttgarter-nachrichten.de/' target='_blank'>Stuttgarter Nachrichten </a> </li> <li> <a href='https://www.sueddeutsche.de/' target='_blank'>Süddeutsche.de </a> </li> </ul> <ul> <li> <a class='mg' href='https://promotion.schwarzwaelder-bote.de' target='_blank'>Promotion-Mitarbeiter gesucht</a> </li> <li> <a class='mg' href='https://stellenmarkt.schwarzwaelder-bote.de/' target='_blank'>Stellenangebote für Fach- und Führungskräfte</a> </li> </ul> <div> <a class='mg' href='https://www.schwarzwald-tourismus.info/' style='padding-right: 10px;' target='_blank' title='Schwarzwald Tourismus'> <img alt='Schwarzwald Tourismus' src='/media.media.b3c2642b-a37d-496b-93ed-a48f7d1c8a62.original.jpg' style='height:60px; width:60px' /> </a> </div> </div>"
     *     }
     *   ]
     * }
     */
    Footer: {
      /**
       * @example footer
       * @enum {string}
       */
      type: 'footer'
      content: components['schemas']['Html'][]
    }
    /** @description actual content of a page */
    PageContent: {
      /**
       * @example pagecontent
       * @enum {string}
       */
      type?: 'pagecontent'
      content?: components['schemas']['BrickGroup'][]
    }
    /** @description a group of bricks or other groups */
    BrickGroup: {
      /**
       * @example brickgroup
       * @enum {string}
       */
      type?: 'brickgroup'
      /** @example b1329ae8-b29c-11ed-afa1-0242ac120002 */
      id: string
      /** @example BG Title */
      title: string
      /** @example css-id */
      cssId?: string
      /** @example css-class */
      cssClass?: string
      renderMode?: components['schemas']['RenderMode']
      content: (
        | components['schemas']['BrickGroup']
        | components['schemas']['Brick']
      )[]
    }
    /** @description a container for a specific page content */
    Brick: {
      /**
       * @example brick
       * @enum {string}
       */
      type?: 'brick'
      /** @example c5bbd51a-b29c-11ed-afa1-0242ac120002 */
      id?: string
      /** @example Brick Title */
      title?: string
      /** @example Headline */
      headline?: string
      /** @example css-id */
      cssId?: string
      /** @example css-class */
      cssClass?: string
      renderMode?: components['schemas']['RenderMode']
      content?: (
        | components['schemas']['Teaser']
        | components['schemas']['Ad']
        | components['schemas']['Html']
        | components['schemas']['LoadMore']
        | components['schemas']['AuthorBox']
        | components['schemas']['ArticleHeader']
        | components['schemas']['Image']
      )[]
    }
    /** @description Article page header */
    ArticleHeader: {
      /**
       * @example articleheader
       * @enum {string}
       */
      type?: 'articleheader'
      /** @example Kicker */
      kicker?: string
      /** @example Headline */
      headline?: string
      /** @example Author */
      author?: string
      /**
       * Format: date-time
       * @example 2023-02-22T10:11:12+01:00
       */
      articleDate?: string
    }
    /** @description A teaser */
    Teaser: {
      /**
       * @example standardteaser
       * @enum {string}
       */
      type?:
        | 'standardteaser'
        | 'topteaser'
        | 'tickerteaser'
        | 'readmoreteaser'
        | 'recoteaser'
        | 'compactteaser'
      /** @example Teaser Title */
      title?: string
      /** @example Teaser Short Title */
      shortTitle?: string
      /** @example Teaser Kicker */
      kicker?: string
      /** @example Teaser Text */
      text?: string
      /** @example /article/fc2b5e18-b29c-11ed-afa1-0242ac120002 */
      reference?: string
      /**
       * Format: date-time
       * @example 2023-02-22T10:11:12+01:00
       */
      publicationDate?: string
      /** @example 2 */
      imageCount?: number
      /** @example 0 */
      videoCount?: number
      /** @example false */
      paidContent?: boolean
      tags?: components['schemas']['Tag'][]
      image?: components['schemas']['Image']
    }
    /** @description a keyword/tag */
    Tag: {
      /**
       * @example tag
       * @enum {string}
       */
      type?: 'tag'
      /** @example 29a0bf50-b29d-11ed-afa1-0242ac120002 */
      id?: string
      /** @example Tag Title */
      title?: string
    }
    /** @description Mode for rendering */
    RenderMode: {
      /**
       * @example hard
       * @enum {string}
       */
      type?: 'hard' | 'soft' | 'lazy'
    }
    /** @description A image object */
    Image: {
      /**
       * @example image
       * @enum {string}
       */
      type?: 'image'
      /** @example 39cfe7e8-b29d-11ed-afa1-0242ac120002 */
      id?: string
      /** @example Image Name */
      name?: string
      /** @example Image Caption */
      caption?: string
      /** @example https://portal.url.com/media.39cfe7e8-b29d-11ed-afa1-0242ac120002.thumbnail.jpg */
      reference?: string
      dimension?: components['schemas']['Dimension']
    }
    /** @description advertisement */
    Ad: {
      /**
       * @example customad
       * @enum {string}
       */
      type?: 'customad' | 'rpdad' | 'nativead' | 'taboolaad'
      /** @example Slot ID */
      slot?: string
    }
    /** @description HTML text */
    Html: {
      /**
       * @example html
       * @enum {string}
       */
      type?: 'html'
      /** @example <div>some markup</div> */
      text?: string
    }
    /** @description load additional/more content */
    LoadMore: {
      /**
       * @example loadmore
       * @enum {string}
       */
      type?: 'loadmore'
      /** @example Loadmore Title */
      title?: string
      /** @example /ressort/cc67d664-b29e-11ed-afa1-0242ac120002 */
      reference?: string
    }
    /** @description infos about the author */
    AuthorBox: {
      /**
       * @example author
       * @enum {string}
       */
      type?: 'author'
      /** @example Author Name */
      name?: string
      /** @example Author Email */
      email?: string
      image?: components['schemas']['Image']
      /** @example /author/d48e98aa-b41a-11ed-afa1-0242ac120002 */
      reference?: string
    }
  }
  responses: {
    /** @description Response for a valid page */
    homePage: {
      content: {
        'application/json': components['schemas']['Wall']
      }
    }
    /** @description Response for a valid page */
    ressortPage: {
      content: {
        'application/json': components['schemas']['Wall']
      }
    }
    /** @description Response for a valid page */
    articlePage: {
      content: {
        'application/json': components['schemas']['Wall']
      }
    }
    /** @description Response for a valid page */
    topicPage: {
      content: {
        'application/json': components['schemas']['Wall']
      }
    }
    /** @description Response for a valid page */
    authorPage: {
      content: {
        'application/json': components['schemas']['Wall']
      }
    }
    /** @description Response for a brick group */
    brickgroup: {
      content: {
        'application/json': components['schemas']['BrickGroup']
      }
    }
    /** @description Response for a brick */
    brick: {
      content: {
        'application/json': components['schemas']['Brick']
      }
    }
    /** @description Response for the header */
    header: {
      content: {
        'application/json': components['schemas']['Header']
      }
    }
    /** @description Response for the footer */
    footer: {
      content: {
        'application/json': components['schemas']['Footer']
      }
    }
    /** @description Response for 4XX and 5XX errors. This also includes the 470 error which indicates that the app/ API version is no longer supported. */
    error: {
      content: {
        'application/json': components['schemas']['ApiError']
      }
    }
    /** @description Invalid request parameters */
    badRequest: {
      content: {
        'application/json': components['schemas']['ApiError']
      }
    }
    /** @description Entity was not found */
    notFound: {
      content: {
        'application/json': components['schemas']['ApiError']
      }
    }
    /** @description An inter-service authentication error happened */
    internalServerError: {
      content: {
        'application/json': components['schemas']['ApiError']
      }
    }
    /** @description An inter-service communication error happened, maybe different API versions */
    badGateway: {
      content: {
        'application/json': components['schemas']['ApiError']
      }
    }
    /** @description An upstream server is not available */
    serviceUnavailable: {
      content: {
        'application/json': components['schemas']['ApiError']
      }
    }
  }
  parameters: {
    /**
     * @description Unique identifier of the portal
     * @example stz
     */
    portal: components['schemas']['Portal']
    /**
     * @description Unique identifier
     * @example a26d8a68-b297-11ed-afa1-0242ac120002
     */
    id: components['schemas']['Id']
  }
  requestBodies: never
  headers: never
  pathItems: never
}

export type external = Record<string, never>

export interface operations {
  /**
   * get homepage
   * @description gets the homepage
   */
  getHomepage: {
    responses: {
      200: components['responses']['homePage']
      400: components['responses']['badRequest']
      404: components['responses']['notFound']
      500: components['responses']['internalServerError']
      502: components['responses']['badGateway']
      503: components['responses']['serviceUnavailable']
      default: components['responses']['error']
    }
  }
  /**
   * get a ressort page for the given id
   * @description gets a ressort page
   */
  getRessort: {
    responses: {
      200: components['responses']['ressortPage']
      400: components['responses']['badRequest']
      404: components['responses']['notFound']
      500: components['responses']['internalServerError']
      502: components['responses']['badGateway']
      503: components['responses']['serviceUnavailable']
      default: components['responses']['error']
    }
  }
  /**
   * get an article page for the given id
   * @description gets an article page
   */
  getArticle: {
    responses: {
      200: components['responses']['articlePage']
      400: components['responses']['badRequest']
      404: components['responses']['notFound']
      500: components['responses']['internalServerError']
      502: components['responses']['badGateway']
      503: components['responses']['serviceUnavailable']
      default: components['responses']['error']
    }
  }
  /**
   * get a reduced article page for the given id
   * @description gets a reduced article page
   */
  getReducedArticle: {
    responses: {
      200: components['responses']['articlePage']
      400: components['responses']['badRequest']
      404: components['responses']['notFound']
      500: components['responses']['internalServerError']
      502: components['responses']['badGateway']
      503: components['responses']['serviceUnavailable']
      default: components['responses']['error']
    }
  }
  /**
   * get a topic page for the given id/title
   * @description gets a topic page
   */
  getTopic: {
    responses: {
      200: components['responses']['topicPage']
      400: components['responses']['badRequest']
      404: components['responses']['notFound']
      500: components['responses']['internalServerError']
      502: components['responses']['badGateway']
      503: components['responses']['serviceUnavailable']
      default: components['responses']['error']
    }
  }
  /**
   * get an author page for the given id
   * @description gets an author page
   */
  getAuthor: {
    responses: {
      200: components['responses']['authorPage']
      400: components['responses']['badRequest']
      404: components['responses']['notFound']
      500: components['responses']['internalServerError']
      502: components['responses']['badGateway']
      503: components['responses']['serviceUnavailable']
      default: components['responses']['error']
    }
  }
  /**
   * get a brick group fragment for the given id
   * @description gets a brick group fragment
   */
  getBrickGroup: {
    responses: {
      200: components['responses']['brickgroup']
      400: components['responses']['badRequest']
      404: components['responses']['notFound']
      500: components['responses']['internalServerError']
      502: components['responses']['badGateway']
      503: components['responses']['serviceUnavailable']
      default: components['responses']['error']
    }
  }
  /**
   * get a brick fragment for the given id
   * @description gets a brick fragment
   */
  getBrick: {
    responses: {
      200: components['responses']['brick']
      400: components['responses']['badRequest']
      404: components['responses']['notFound']
      500: components['responses']['internalServerError']
      502: components['responses']['badGateway']
      503: components['responses']['serviceUnavailable']
      default: components['responses']['error']
    }
  }
  /**
   * get the header fragment for the given id
   * @description gets the header fragment
   */
  getHeader: {
    responses: {
      200: components['responses']['header']
      400: components['responses']['badRequest']
      404: components['responses']['notFound']
      500: components['responses']['internalServerError']
      502: components['responses']['badGateway']
      503: components['responses']['serviceUnavailable']
      default: components['responses']['error']
    }
  }
  /**
   * get the footer fragment for the given id
   * @description gets the footer fragment
   */
  getFooter: {
    responses: {
      200: components['responses']['footer']
      400: components['responses']['badRequest']
      404: components['responses']['notFound']
      500: components['responses']['internalServerError']
      502: components['responses']['badGateway']
      503: components['responses']['serviceUnavailable']
      default: components['responses']['error']
    }
  }
}
